S -> ENTER S
S -> S ENTER
S -> ENTER
S -> SS
SS -> PART SS
PART -> FUNC_STMT
PART -> FOR_STMT
PART -> IF_STMT
PART -> WHILE_STMT
PART -> SWITCH_STMT
PART -> SENTENCE
SS -> FUNC_STMT
SS -> FOR_STMT
SS -> IF_STMT
SS -> WHILE_STMT
SS -> SENTENCE
SS -> SWITCH_STMT
SENTENCE -> IF_BLOCK
SENTENCE -> TRY_BLOCK
SENTENCE -> DECLARE_STMT
SENTENCE -> THROW_STMT
SENTENCE -> FUNC_SENTENCE
SENTENCE -> FUNCTION
SENTENCE -> ASSIGN
SENTENCE -> METHOD_STMT
SENTENCE -> FOR_STMT
SENTENCE -> SWITCH_STMT
SENTENCE -> DELETE_STMT
SENTENCE -> ENTER SENTENCE
SENTENCE -> SENTENCE ENTER SENTENCE
SENTENCE -> SENTENCE ENTER
SENTENCE -> CONTINUE
SENTENCE -> BREAK
LIST -> KSKI KSKA
LIST -> KSKI PARAM KSKA
LIST -> KSKI ID FOR PARAM IN ID KSKA
LIST -> KSKI ID FOR PARAM IN RANGE_STMT KSKA
LIST -> KSKI ARIT_OP FOR PARAM IN ID KSKA
LIST -> KSKI ARIT_OP FOR PARAM IN RANGE_STMT KSKA
OBJECT -> PEMBUKA PENUTUP
OBJECT -> PEMBUKA ATTRIBUTE PENUTUP
ATTRIBUTE -> ID TITIKDUA STATIC
ATTRIBUTE -> ID TITIKDUA ID
ATTRIBUTE -> ATTRIBUTE COMMA
ATTRIBUTE -> ATTRIBUTE COMMA ATTRIBUTE
ATTRIBUTE -> ATTRIBUTE COMMA ENTER ATTRIBUTE
ARIT_OP -> ID ARIT_OPERATOR ARIT_OP
ARIT_OP -> STATIC ARIT_OPERATOR ARIT_OP
ARIT_OP -> ID ARIT_OPERATOR ID
ARIT_OP -> STATIC ARIT_OPERATOR ID
ARIT_OP -> ID ARIT_OPERATOR STATIC
ARIT_OP -> STATIC ARIT_OPERATOR STATIC
ARIT_OP -> KBKI ARIT_OP KBKA
ARIT_OPERATOR -> ADD
ARIT_OPERATOR -> SUB
ARIT_OPERATOR -> MUL
ARIT_OPERATOR -> DIV
ARIT_OPERATOR -> MOD
ARIT_OPERATOR -> POW
ARIT_OPERATOR -> LSHIFT
ARIT_OPERATOR -> RSHIFT
ARIT_OPERATOR -> URSHIFT
ARIT_OPERATOR -> AND
ARIT_OPERATOR -> OR
ARIT_OPERATOR -> XOR
LOGI_ID -> FUNCTION
LOGI_ID -> METHOD_STMT
LOGI_ID -> IDINT
LOGI_ID -> NOT IDINT
LOGI_ID -> BOOL
LOGI_ID -> NOT LOGI_ID
LOGI_ID -> KBKI LOGI_ID KBKA
BOOL -> NOT BOOL
LOGI_OP -> ID
LOGI_OP -> NOT LOGI_OP
LOGI_OP -> LOGI_ID LOGI_OPERATOR LOGI_OP
LOGI_OP -> LOGI_ID LOGI_OPERATOR LOGI_ID
LOGI_OP -> KBKI LOGI_OP KBKA
LOGI_OPERATOR -> ISEQ
LOGI_OPERATOR -> LEQ
LOGI_OPERATOR -> ISEQEQ
LOGI_OPERATOR -> L
LOGI_OPERATOR -> GEQ
LOGI_OPERATOR -> G
LOGI_OPERATOR -> NEQ
LOGI_OPERATOR -> ANDLOG
LOGI_OPERATOR -> NULLISH
LOGI_OPERATOR -> ORLOG
LOGI_OPERATOR -> IN
LOGI_OPERATOR -> IS
PARAM -> ALL
PARAM -> KARTITIK
PARAM -> STATIC
PARAM -> PARAM COMMA PARAM 
PARAM -> ARIT_OP
PARAM -> LOGI_OP
PARAM -> METHOD_STMT
PARAMFUNGSI -> ID EQ STATIC
PARAMFUNGSI -> ID
PARAMFUNGSI -> ID COMMA PARAMFUNGSI
PARAMFUNGSI -> ID EQ STATIC COMMA PARAMFUNGSI
STATIC -> INT
STATIC -> STRING
STATIC -> BOOL
STATIC -> LIST
STATIC -> OBJECT
METHOD_STMT -> ID KSKI IDINT KSKA TITIK ID
METHOD_STMT -> ID KSKI IDINT KSKA TITIK FUNCTION
METHOD_STMT -> KARTITIK KBKI KBKA
METHOD_STMT -> KARTITIK KBKI PARAM KBKA
METHOD_STMT -> KARTITIK KBKI PARAMFUNGSI KBKA
EXP -> ID KBKI KBKA
EXP -> ID KBKI PARAM KBKA
EXP -> BOOL
EXP -> IDINT
EXP -> EXP ARIT_OPERATOR EXP
STMT -> EXP LOGI_OPERATOR EXP
IF_STMT -> IF KBKI EXP KBKA PEMBUKA SENTENCE PENUTUP
IF_STMT -> IF KBKI STMT KBKA PEMBUKA SENTENCE PENUTUP
IF_STMT -> IF KBKI ID KBKA PEMBUKA SENTENCE PENUTUP
IF_STMT -> IF KBKI METHOD_STMT KBKA PEMBUKA SENTENCE PENUTUP
IF_STMT -> IF KBKI LOGI_OP KBKA PEMBUKA SENTENCE PENUTUP
ELIF_STMT -> ELIF KBKI KBKI EXP KBKA PEMBUKA SENTENCE PENUTUP
ELIF_STMT -> ELIF KBKI STMT KBKA PEMBUKA SENTENCE PENUTUP
ELIF_STMT -> ELIF KBKI ID KBKA PEMBUKA SENTENCE PENUTUP
ELIF_STMT -> ELIF KBKI LOGI_OP KBKA PEMBUKA SENTENCE PENUTUP
ELSE_STMT -> ELSE PEMBUKA SENTENCE PENUTUP
ELIF_BANYAK -> ELIF_STMT
ELIF_BANYAK -> ELIF_STMT ELIF_BANYAK
IF_BLOCK -> IF_STMT
IF_BLOCK -> IF_STMT ELIF_BANYAK
IF_BLOCK -> IF_STMT ELIF_BANYAK ELSE_STMT
IF_BLOCK -> IF_STMT ELSE_STMT
IF_TERNARY -> STMT QMARK ALL TITIKDUA ALL
IF_TERNARY -> STMT QMARK ALL TITIKDUA IF_TERNARY
TRY_STMT -> TRY PEMBUKA SENTENCE PENUTUP
CATCH_STMT -> CATCH KBKI ID KBKA PEMBUKA SENTENCE PENUTUP
FINALLY_STMT -> FINALLY PEMBUKA SENTENCE PENUTUP
TRY_BLOCK -> TRY_STMT CATCH_STMT
TRY_BLOCK -> TRY_STMT FINALLY_STMT
TRY_BLOCK -> TRY_STMT CATCH_STMT FINALLY_STMT
THROW_STMT -> THROW ALL
THROW_STMT -> THROW FUNCTION
ARRAY -> ID LIST
DECLARE_ID -> ID
DECLARE_ID -> ID COMMA DECLARE_ID
DECLARE_ASSIGN -> ID EQ ASSIGNMENT
DECLARE_ASSIGN -> DECLARE_ASSIGN COMMA DECLARE_ASSIGN
DECLARE_ASSIGN -> DECLARE_ASSIGN COMMA ENTER DECLARE_ASSIGN
DECLARE_STMT -> LET DECLARE_ID
DECLARE_STMT -> LET DECLARE_ASSIGN
DECLARE_STMT -> VAR DECLARE_ASSIGN
DECLARE_STMT -> VAR DECLARE_ID
DECLARE_STMT -> CONST DECLARE_ASSIGN
DECLARE_STMT -> DECLARE_STMT ENTER
ASSIGN -> ID ASSIGN_OP ASSIGNMENT
ASSIGN -> KARTITIK ASSIGN_OP ASSIGNMENT
ASSIGN -> ARRAY ASSIGN_OP ASSIGNMENT
ASSIGN -> ARRAY LIST ASSIGN_OP ASSIGNMENT
ASSIGN -> INCDEC
INCDEC -> ID INC_OP
INCDEC -> INC_OP ID
INCDEC -> ID DEC_OP
INCDEC -> DEC_OP ID
ASSIGN_OP -> EQ
ASSIGN_OP -> SUBAS
ASSIGN_OP -> MULAS
ASSIGN_OP -> SUMAS
ASSIGN_OP -> DIVAS
ASSIGN_OP -> MODAS
ASSIGN_OP -> POWAS
ASSIGN_OP -> LSHIFTAS
ASSIGN_OP -> RSHIFTAS
ASSIGN_OP -> URSHIFTAS
ASSIGN_OP -> ANDAS
ASSIGN_OP -> ORAS
ASSIGN_OP -> XORAS
ASSIGN_OP -> ANDLOGAS
ASSIGN_OP -> ORLOGAS
ASSIGN_OP -> NULLISHAS
OPERATION -> ARIT_OP
OPERATION -> LOGI_OP
ASSIGNMENT -> KARTITIK
ASSIGNMENT -> IF_TERNARY
ASSIGNMENT -> OPERATION
ASSIGNMENT -> ID
ASSIGNMENT -> INT
ASSIGNMENT -> INCDEC
ASSIGNMENT -> STRING
ASSIGNMENT -> FUNCTION
ASSIGNMENT -> FUNC_STMT
ASSIGNMENT -> ARRAY
ASSIGNMENT -> LIST
ASSIGNMENT -> METHOD_STMT
ASSIGNMENT -> OBJECT
FUNC_STMT -> FUNC_STR ID KBKI PARAMFUNGSI KBKA PEMBUKA FUNC_SENTENCE PENUTUP
FUNC_STMT -> FUNC_STR ID KBKI KBKA PEMBUKA ENTER FUNC_SENTENCE PENUTUP
FUNC_SENTENCE -> RETURN ALL
FUNC_SENTENCE -> RETURN STATIC
FUNC_SENTENCE -> RETURN EXP
FUNC_SENTENCE -> RETURN LOGI_OP
FUNC_SENTENCE -> RETURN IF_TERNARY
FUNC_SENTENCE -> IF_BLOCK
FUNC_SENTENCE -> SENTENCE
FUNC_SENTENCE -> FUNC_SENTENCE RETURN ALL
FUNC_SENTENCE -> FUNC_SENTENCE RETURN STATIC
FUNC_SENTENCE -> FUNC_SENTENCE RETURN EXP
FUNC_SENTENCE -> FUNC_SENTENCE RETURN LOGI_OP
FUNC_SENTENCE -> FUNC_SENTENCE RETURN IF_TERNARY
FUNC_SENTENCE -> SENTENCE FUNC_SENTENCE
FUNCTION -> ID KBKI KBKA
FUNCTION -> ID KBKI PARAM KBKA
FUNCTION -> ID KBKI PARAMFUNGSI KBKA
WHILE_STMT -> WHILE KBKI LOGI_OP KBKA PEMBUKA LOOP_SENTENCE PENUTUP
WHILE_STMT -> WHILE KBKI IDINT KBKA PEMBUKA LOOP_SENTENCE PENUTUP
FOR_STMT -> FOR KBKI DECLAREFOR_STMT TITIKKOMA STMT TITIKKOMA FOR_INCDEC KBKA PEMBUKA LOOP_SENTENCE PENUTUP
FOR_STMT -> FOR KBKI DECLAREFOR_STMT TITIKKOMA TITIKKOMA FOR_INCDEC KBKA PEMBUKA LOOP_SENTENCE PENUTUP
FOR_STMT -> FOR KBKI DECLAREFOR_STMT TITIKKOMA STMT TITIKKOMA KBKA PEMBUKA LOOP_SENTENCE PENUTUP
FOR_STMT -> FOR KBKI TITIKKOMA STMT TITIKKOMA FOR_INCDEC KBKA PEMBUKA LOOP_SENTENCE PENUTUP
FOR_STMT -> FOR KBKI DECLAREFOR_STMT TITIKKOMA TITIKKOMA KBKA PEMBUKA LOOP_SENTENCE PENUTUP
FOR_STMT -> FOR KBKI TITIKKOMA STMT TITIKKOMA KBKA PEMBUKA LOOP_SENTENCE PENUTUP
FOR_STMT -> FOR KBKI TITIKKOMA TITIKKOMA FOR_INCDEC KBKA PEMBUKA LOOP_SENTENCE PENUTUP
FOR_STMT -> FOR KBKI TITIKKOMA TITIKKOMA KBKA PEMBUKA LOOP_SENTENCE PENUTUP
DECLAREFOR_STMT -> ID EQ ASSIGNMENT
DECLAREFOR_STMT -> LET ID EQ ASSIGNMENT 
DECLAREFOR_STMT -> VAR ID EQ ASSIGNMENT
DECLAREFOR_STMT -> DECLAREFOR_STMT COMMA DECLAREFOR_STMT
FOR_INCDEC -> INCDEC
FOR_INCDEC -> FOR_INCDEC COMMA FOR_INCDEC 
SWITCH_STMT -> SWITCH KBKI ID KBKA PEMBUKA SWITCH_FINAL PENUTUP
SWITCH_SENTENCE -> CASE IDINT TITIKDUA ENTER CASE_SENTENCE ENTER
SWITCH_SENTENCE -> CASE LOGI_OP TITIKDUA ENTER CASE_SENTENCE ENTER
SWITCH_SENTENCE -> SWITCH_SENTENCE SWITCH_SENTENCE
DEFAULT_STMT -> DEFAULT TITIKDUA ENTER CASE_SENTENCE ENTER
SWITCH_FINAL -> SWITCH_SENTENCE DEFAULT_STMT SWITCH_SENTENCE
SWITCH_FINAL -> DEFAULT_STMT SWITCH_SENTENCE
SWITCH_FINAL -> SWITCH_SENTENCE DEFAULT_STMT SWITCH_SENTENCE
SWITCH_FINAL -> SWITCH_SENTENCE DEFAULT_STMT 
SWITCH_FINAL -> SWITCH_SENTENCE
CASE_SENTENCE -> SENTENCE
CASE_SENTENCE -> CASE_SENTENCE ENTER CASE_SENTENCE
LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> LOOP_SENTENCE ENTER LOOP_SENTENCE
LOOP_SENTENCE -> IF_BLOCK LOOP_SENTENCE
DELETE_STMT -> DELETE KARTITIK
DELETE_STMT -> DELETE ARRAY
ENTER -> NEWLINE ENTER
ENTER -> NEWLINE
ID -> KBKI ID KBKA
IDINT -> ID
IDINT -> INT
IDINT -> BOOL
IDINT -> NULL
ALL -> IDINT
ALL -> STRING
BOOL -> TRUE
BOOL -> FALSE
BOOL -> NULL 
PEMBUKA -> KKKI
PEMBUKA -> KKKI ENTER
PEMBUKA -> ENTER KKKI
PEMBUKA -> ENTER KKKI ENTER
PENUTUP -> KKKA 
PENUTUP -> ENTER KKKA
PENUTUP -> KKKA ENTER
PENUTUP -> ENTER KKKA ENTER